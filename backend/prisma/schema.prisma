generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum OrderStatusEvent {
  PENDING
  ACCEPTED
  OUT_FOR_DELIVERY
  DELIVERED
  CANCELLED
}

model User {
  id              Int        @id @default(autoincrement())
  name            String
  email           String     @unique
  password        String
  role            Role       @default(USER)
  shippingAddress Int?
  billingAddress  Int?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @default(now()) @updatedAt
  addresses       Address[]
  cart            CartItem[]
  orders          Order[]

  @@map("users")
}

model Address {
  id        Int      @id @default(autoincrement())
  lineOne   String
  lineTwo   String?
  city      String
  country   String
  pincode   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])

  @@map("addresses")
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  price       Int
  image       String
  brand       String
  tags        String
  stock       Int
  rating      Decimal        @default(0)
  num_reviews Int            @default(0)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @default(now()) @updatedAt
  cartItem    CartItem[]
  order       OrderProduct[]

  @@map("products")
}

model CartItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])

  @@map("cart_items")
}

model Order {
  id        Int              @id @default(autoincrement())
  netAmount Int
  address   String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @default(now()) @updatedAt
  userId    Int
  user      User             @relation(fields: [userId], references: [id])
  products  OrderProduct[]
  status    OrderStatusEvent @default(PENDING)
  events    OrderStatus[]

  @@map("orders")
}

model OrderProduct {
  id        Int      @id @default(autoincrement())
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])

  @@map("order_products")
}

model OrderStatus {
  id        Int              @id @default(autoincrement())
  status    OrderStatusEvent @default(PENDING)
  createdAt DateTime         @default(now())
  updatedAt DateTime         @default(now()) @updatedAt
  orderId   Int
  order     Order            @relation(fields: [orderId], references: [id])

  @@map("order_status")
}
